import*as c from"node:module";import{pathToFileURL as W}from"node:url";import u from"enhanced-resolve";import{createJiti as $}from"jiti";import E from"node:fs";import D from"node:fs/promises";import v,{dirname as h,extname as N}from"node:path";import{pathToFileURL as y}from"node:url";import{compile as I}from"tailwindcss";import d from"node:fs/promises";import m from"node:path";var j=[/import[\s\S]*?['"](.{3,}?)['"]/gi,/import[\s\S]*from[\s\S]*?['"](.{3,}?)['"]/gi,/export[\s\S]*from[\s\S]*?['"](.{3,}?)['"]/gi,/require\(['"`](.+)['"`]\)/gi],P=[".js",".cjs",".mjs"],C=["",".js",".cjs",".mjs",".ts",".cts",".mts",".jsx",".tsx"],F=["",".ts",".cts",".mts",".tsx",".js",".cjs",".mjs",".jsx"];async function T(e,r){for(let i of r){let t=`${e}${i}`;if((await d.stat(t).catch(()=>null))?.isFile())return t}for(let i of r){let t=`${e}/index${i}`;if(await d.access(t).then(()=>!0,()=>!1))return t}return null}async function g(e,r,i,t){let o=P.includes(t)?C:F,s=await T(m.resolve(i,r),o);if(s===null||e.has(s))return;e.add(s),i=m.dirname(s),t=m.extname(s);let n=await d.readFile(s,"utf-8"),l=[];for(let a of j)for(let f of n.matchAll(a))f[1].startsWith(".")&&l.push(g(e,f[1],i,t));await Promise.all(l)}async function w(e){let r=new Set;return await g(r,e,m.dirname(e),m.extname(e)),Array.from(r)}async function H(e,{base:r,onDependency:i}){return await I(e,{base:r,async loadModule(t,o){if(t[0]!=="."){let a=await _(t,o);if(!a)throw new Error(`Could not resolve '${t}' from '${o}'`);let f=await S(y(a).href);return{base:h(a),module:f.default??f}}let s=await _(t,o);if(!s)throw new Error(`Could not resolve '${t}' from '${o}'`);let[n,l]=await Promise.all([S(y(s).href+"?id="+Date.now()),w(s)]);i(s);for(let a of l)i(a);return{base:h(s),module:n.default??n}},async loadStylesheet(t,o){let s=await M(t,o);if(!s)throw new Error(`Could not resolve '${t}' from '${o}'`);if(typeof globalThis.__tw_readFile=="function"){let l=await globalThis.__tw_readFile(s,"utf-8");if(l)return{base:v.dirname(s),content:l}}let n=await D.readFile(s,"utf-8");return{base:v.dirname(s),content:n}}})}var R=null;async function S(e){try{return await import(e)}catch(r){try{return R??=$(import.meta.url,{moduleCache:!1,fsCache:!1}),await R.import(e)}catch{}throw r}}var x=u.ResolverFactory.createResolver({fileSystem:new u.CachedInputFileSystem(E,4e3),useSyncFileSystemCalls:!0,extensions:[".css"],mainFields:["style"],conditionNames:["style"]});async function M(e,r){if(typeof globalThis.__tw_resolve=="function"){let t=globalThis.__tw_resolve(e,r);if(t)return Promise.resolve(t)}if(!(N(e)===""||e.startsWith(".")))try{let t=await p(x,`./${e}`,r);if(!t)throw new Error;return t}catch{}return p(x,e,r)}var O=u.ResolverFactory.createResolver({fileSystem:new u.CachedInputFileSystem(E,4e3),useSyncFileSystemCalls:!0});function _(e,r){return p(O,e,r)}function p(e,r,i){return new Promise((t,o)=>e.resolve({},i,r,{},(s,n)=>{if(s)return o(s);t(n)}))}function J(e,r){if(typeof e!="string")throw new TypeError("expected path to be a string");if(e==="\\"||e==="/")return"/";var i=e.length;if(i<=1)return e;var t="";if(i>4&&e[3]==="\\"){var o=e[2];(o==="?"||o===".")&&e.slice(0,2)==="\\\\"&&(e=e.slice(2),t="//")}var s=e.split(/[/\\]+/);return r!==!1&&s[s.length-1]===""&&s.pop(),t+s.join("/")}function Q(e){let r=J(e);return e.startsWith("\\\\")&&r.startsWith("/")&&!r.startsWith("//")?`/${r}`:r}if(!process.versions.bun){let e=c.createRequire(import.meta.url);c.register?.(W(e.resolve("@tailwindcss/node/esm-cache-loader")))}export{H as compile,Q as normalizePath};
