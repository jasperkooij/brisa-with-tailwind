import{compile as R}from"@tailwindcss/node";import{clearRequireCache as C}from"@tailwindcss/node/require-cache";import{Scanner as O}from"@tailwindcss/oxide";import z from"fs";import{Features as x,transform as A}from"lightningcss";import S from"path";import E from"postcss";import{normalizePath as w}from"@tailwindcss/node";import d from"node:path";var P="'",y='"';function b(){let o=new WeakSet;function l(t){let n=t.root().source?.input.file;if(!n)return;let c=t.source?.input.file;if(!c||o.has(t))return;let i=t.params[0],a=i[0]===y&&i[i.length-1]===y?y:i[0]===P&&i[i.length-1]===P?P:null;if(!a)return;let e=t.params.slice(1,-1),f="";if(e.startsWith("!")&&(e=e.slice(1),f="!"),!e.startsWith("./")&&!e.startsWith("../"))return;let m=d.posix.join(w(d.dirname(c)),e),u=d.posix.dirname(w(n)),r=d.posix.relative(u,m);r.startsWith(".")||(r="./"+r),t.params=a+f+r+a,o.add(t)}return{postcssPlugin:"tailwindcss-postcss-fix-relative-paths",AtRule:{source:l,plugin:l,config:l}}}var v=class extends Map{constructor(t){super();this.factory=t}get(t){let n=super.get(t);return n===void 0&&(n=this.factory(t,this),this.set(t,n)),n}};function M(o={}){let l=o.base??process.cwd(),t=o.optimize??process.env.NODE_ENV==="production",n=new v(()=>({mtimes:new Map,compiler:null,css:"",optimizedCss:"",fullRebuildPaths:[]}));return{postcssPlugin:"@tailwindcss/postcss",plugins:[b(),{postcssPlugin:"tailwindcss",async OnceExit(c,{result:i}){let a=i.opts.from??"",e=n.get(a),f=S.dirname(S.resolve(a));async function m(){return C(e.fullRebuildPaths),e.fullRebuildPaths=[],R(c.toString(),{base:f,onDependency:p=>{e.fullRebuildPaths.push(p)}})}e.compiler??=await m();let u="incremental";{for(let s of e.fullRebuildPaths)i.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:s,parent:i.opts.from});let p=i.messages.flatMap(s=>s.type!=="dependency"?[]:s.file);p.push(a);for(let s of p){let h=z.statSync(s,{throwIfNoEntry:!1})?.mtimeMs??null;if(h===null){s===a&&(u="full");continue}e.mtimes.get(s)!==h&&(u="full",e.mtimes.set(s,h))}}let r="",g=new O({detectSources:{base:l},sources:e.compiler.globs}),T=g.scan();for(let p of g.files)i.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:p,parent:i.opts.from});for(let{base:p,pattern:s}of g.globs)i.messages.push({type:"dir-dependency",plugin:"@tailwindcss/postcss",dir:p,glob:s,parent:i.opts.from});u==="full"&&(e.compiler=await m()),r=e.compiler.build(T),r!==e.css&&t&&(e.optimizedCss=V(r,{minify:typeof t=="object"?t.minify:!0})),e.css=r,c.removeAll(),c.append(E.parse(t?e.optimizedCss:e.css,i.opts))}}]}}function V(o,{file:l="input.css",minify:t=!1}={}){return A({filename:l,code:Buffer.from(o),minify:t,sourceMap:!1,drafts:{customMedia:!0},nonStandard:{deepSelectorCombinator:!0},include:x.Nesting,exclude:x.LogicalProperties,targets:{safari:16<<16|1024},errorRecovery:!0}).code.toString()}var Q=Object.assign(M,{postcss:!0});export{Q as default};
